// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.6
// source: google/api/monitored_resource.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An object representing a resource that can be used for monitoring, logging,
// billing, or other purposes.
type MonitoredResource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The monitored resource type. For example, the type of a
	// Compute Engine VM instance is `gce_instance`.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Values for all of the labels listed in the associated monitored
	// resource descriptor. For example, Compute Engine VM instances use the
	// labels `"project_id"`, `"instance_id"`, and `"zone"`.
	Labels        map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoredResource) Reset() {
	*x = MonitoredResource{}
	mi := &file_google_api_monitored_resource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoredResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoredResource) ProtoMessage() {}

func (x *MonitoredResource) ProtoReflect() protoreflect.Message {
	mi := &file_google_api_monitored_resource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoredResource.ProtoReflect.Descriptor instead.
func (*MonitoredResource) Descriptor() ([]byte, []int) {
	return file_google_api_monitored_resource_proto_rawDescGZIP(), []int{0}
}

func (x *MonitoredResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MonitoredResource) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_google_api_monitored_resource_proto protoreflect.FileDescriptor

const file_google_api_monitored_resource_proto_rawDesc = "" +
	"\n" +
	"#google/api/monitored_resource.proto\x12\n" +
	"google.api\"\xa5\x01\n" +
	"\x11MonitoredResource\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12A\n" +
	"\x06labels\x18\x02 \x03(\v2).google.api.MonitoredResource.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01BSZQgithub.com/googleapis/google-cloudevents-go/third_party/googleapis/google/api;apib\x06proto3"

var (
	file_google_api_monitored_resource_proto_rawDescOnce sync.Once
	file_google_api_monitored_resource_proto_rawDescData []byte
)

func file_google_api_monitored_resource_proto_rawDescGZIP() []byte {
	file_google_api_monitored_resource_proto_rawDescOnce.Do(func() {
		file_google_api_monitored_resource_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_google_api_monitored_resource_proto_rawDesc), len(file_google_api_monitored_resource_proto_rawDesc)))
	})
	return file_google_api_monitored_resource_proto_rawDescData
}

var file_google_api_monitored_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_google_api_monitored_resource_proto_goTypes = []any{
	(*MonitoredResource)(nil), // 0: google.api.MonitoredResource
	nil,                       // 1: google.api.MonitoredResource.LabelsEntry
}
var file_google_api_monitored_resource_proto_depIdxs = []int32{
	1, // 0: google.api.MonitoredResource.labels:type_name -> google.api.MonitoredResource.LabelsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_google_api_monitored_resource_proto_init() }
func file_google_api_monitored_resource_proto_init() {
	if File_google_api_monitored_resource_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_google_api_monitored_resource_proto_rawDesc), len(file_google_api_monitored_resource_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_google_api_monitored_resource_proto_goTypes,
		DependencyIndexes: file_google_api_monitored_resource_proto_depIdxs,
		MessageInfos:      file_google_api_monitored_resource_proto_msgTypes,
	}.Build()
	File_google_api_monitored_resource_proto = out.File
	file_google_api_monitored_resource_proto_goTypes = nil
	file_google_api_monitored_resource_proto_depIdxs = nil
}
