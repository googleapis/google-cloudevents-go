// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.6
// source: firebase/analytics/v1/data.proto

package analyticsdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The data within Firebase Analytics log events.
type AnalyticsLogData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User related dimensions.
	UserDim *UserDimensions `protobuf:"bytes,1,opt,name=user_dim,json=userDim,proto3" json:"user_dim,omitempty"`
	// A repeated record of event related dimensions.
	EventDim      []*EventDimensions `protobuf:"bytes,2,rep,name=event_dim,json=eventDim,proto3" json:"event_dim,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyticsLogData) Reset() {
	*x = AnalyticsLogData{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyticsLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyticsLogData) ProtoMessage() {}

func (x *AnalyticsLogData) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyticsLogData.ProtoReflect.Descriptor instead.
func (*AnalyticsLogData) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyticsLogData) GetUserDim() *UserDimensions {
	if x != nil {
		return x.UserDim
	}
	return nil
}

func (x *AnalyticsLogData) GetEventDim() []*EventDimensions {
	if x != nil {
		return x.EventDim
	}
	return nil
}

// Message containing information about the user associated with the event.
type UserDimensions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID set via the setUserId API.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The time (in microseconds) at which the user first opened the app.
	FirstOpenTimestampMicros int64 `protobuf:"varint,2,opt,name=first_open_timestamp_micros,json=firstOpenTimestampMicros,proto3" json:"first_open_timestamp_micros,omitempty"`
	// A repeated record of user properties set with the setUserProperty API.
	// https://firebase.google.com/docs/analytics/android/properties
	UserProperties map[string]*UserPropertyValue `protobuf:"bytes,3,rep,name=user_properties,json=userProperties,proto3" json:"user_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Device information.
	DeviceInfo *DeviceInfo `protobuf:"bytes,4,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	// User's geographic information.
	GeoInfo *GeoInfo `protobuf:"bytes,5,opt,name=geo_info,json=geoInfo,proto3" json:"geo_info,omitempty"`
	// App information.
	AppInfo *AppInfo `protobuf:"bytes,6,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	// Information about marketing campaign which acquired the user.
	TrafficSource *TrafficSource `protobuf:"bytes,7,opt,name=traffic_source,json=trafficSource,proto3" json:"traffic_source,omitempty"`
	// Information regarding the bundle in which these events were uploaded.
	BundleInfo *ExportBundleInfo `protobuf:"bytes,8,opt,name=bundle_info,json=bundleInfo,proto3" json:"bundle_info,omitempty"`
	// Lifetime Value information about this user.
	LtvInfo       *LtvInfo `protobuf:"bytes,9,opt,name=ltv_info,json=ltvInfo,proto3" json:"ltv_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDimensions) Reset() {
	*x = UserDimensions{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDimensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDimensions) ProtoMessage() {}

func (x *UserDimensions) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDimensions.ProtoReflect.Descriptor instead.
func (*UserDimensions) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *UserDimensions) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserDimensions) GetFirstOpenTimestampMicros() int64 {
	if x != nil {
		return x.FirstOpenTimestampMicros
	}
	return 0
}

func (x *UserDimensions) GetUserProperties() map[string]*UserPropertyValue {
	if x != nil {
		return x.UserProperties
	}
	return nil
}

func (x *UserDimensions) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *UserDimensions) GetGeoInfo() *GeoInfo {
	if x != nil {
		return x.GeoInfo
	}
	return nil
}

func (x *UserDimensions) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *UserDimensions) GetTrafficSource() *TrafficSource {
	if x != nil {
		return x.TrafficSource
	}
	return nil
}

func (x *UserDimensions) GetBundleInfo() *ExportBundleInfo {
	if x != nil {
		return x.BundleInfo
	}
	return nil
}

func (x *UserDimensions) GetLtvInfo() *LtvInfo {
	if x != nil {
		return x.LtvInfo
	}
	return nil
}

// Predefined (eg: LTV) or custom properties (eg: birthday) stored on client
// side and associated with subsequent HitBundles.
type UserPropertyValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Last set value of user property.
	Value *AnalyticsValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// UTC client time when user property was last set.
	SetTimestampUsec int64 `protobuf:"varint,2,opt,name=set_timestamp_usec,json=setTimestampUsec,proto3" json:"set_timestamp_usec,omitempty"`
	// Index for user property (one-based).
	Index         int32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPropertyValue) Reset() {
	*x = UserPropertyValue{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPropertyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPropertyValue) ProtoMessage() {}

func (x *UserPropertyValue) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPropertyValue.ProtoReflect.Descriptor instead.
func (*UserPropertyValue) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *UserPropertyValue) GetValue() *AnalyticsValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *UserPropertyValue) GetSetTimestampUsec() int64 {
	if x != nil {
		return x.SetTimestampUsec
	}
	return 0
}

func (x *UserPropertyValue) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

// Value for Event Params and UserProperty can be of type string or int or
// float or double.
type AnalyticsValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ParamValue:
	//
	//	*AnalyticsValue_StringValue
	//	*AnalyticsValue_IntValue
	//	*AnalyticsValue_FloatValue
	//	*AnalyticsValue_DoubleValue
	ParamValue    isAnalyticsValue_ParamValue `protobuf_oneof:"param_value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyticsValue) Reset() {
	*x = AnalyticsValue{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyticsValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyticsValue) ProtoMessage() {}

func (x *AnalyticsValue) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyticsValue.ProtoReflect.Descriptor instead.
func (*AnalyticsValue) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *AnalyticsValue) GetParamValue() isAnalyticsValue_ParamValue {
	if x != nil {
		return x.ParamValue
	}
	return nil
}

func (x *AnalyticsValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.ParamValue.(*AnalyticsValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *AnalyticsValue) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.ParamValue.(*AnalyticsValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *AnalyticsValue) GetFloatValue() float32 {
	if x != nil {
		if x, ok := x.ParamValue.(*AnalyticsValue_FloatValue); ok {
			return x.FloatValue
		}
	}
	return 0
}

func (x *AnalyticsValue) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.ParamValue.(*AnalyticsValue_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

type isAnalyticsValue_ParamValue interface {
	isAnalyticsValue_ParamValue()
}

type AnalyticsValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type AnalyticsValue_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type AnalyticsValue_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,3,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type AnalyticsValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

func (*AnalyticsValue_StringValue) isAnalyticsValue_ParamValue() {}

func (*AnalyticsValue_IntValue) isAnalyticsValue_ParamValue() {}

func (*AnalyticsValue_FloatValue) isAnalyticsValue_ParamValue() {}

func (*AnalyticsValue_DoubleValue) isAnalyticsValue_ParamValue() {}

// Message containing device informations.
type DeviceInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device category.
	// Eg. tablet or mobile.
	DeviceCategory string `protobuf:"bytes,1,opt,name=device_category,json=deviceCategory,proto3" json:"device_category,omitempty"`
	// Device brand name.
	// Eg. Samsung, HTC, etc.
	MobileBrandName string `protobuf:"bytes,2,opt,name=mobile_brand_name,json=mobileBrandName,proto3" json:"mobile_brand_name,omitempty"`
	// Device model name.
	// Eg. GT-I9192
	MobileModelName string `protobuf:"bytes,3,opt,name=mobile_model_name,json=mobileModelName,proto3" json:"mobile_model_name,omitempty"`
	// Device marketing name.
	// Eg. Galaxy S4 Mini
	MobileMarketingName string `protobuf:"bytes,4,opt,name=mobile_marketing_name,json=mobileMarketingName,proto3" json:"mobile_marketing_name,omitempty"`
	// Device model.
	// Eg. GT-I9192
	DeviceModel string `protobuf:"bytes,12,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	// Device OS version when data capture ended.
	// Eg. 4.4.2
	PlatformVersion string `protobuf:"bytes,6,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	// Vendor specific device identifier. This is IDFV on iOS. Not used for
	// Android.
	// Example: "599F9C00-92DC-4B5C-9464-7971F01F8370"
	DeviceId string `protobuf:"bytes,7,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// The type of the resettable_device_id is always IDFA on iOS and AdId
	// on Android.
	// Example: "71683BF9-FA3B-4B0D-9535-A1F05188BAF3"
	ResettableDeviceId string `protobuf:"bytes,8,opt,name=resettable_device_id,json=resettableDeviceId,proto3" json:"resettable_device_id,omitempty"`
	// The user language.
	// Eg. "en-us", "en-za", "zh-tw", "jp"
	UserDefaultLanguage string `protobuf:"bytes,9,opt,name=user_default_language,json=userDefaultLanguage,proto3" json:"user_default_language,omitempty"`
	// The timezone of the device when data was uploaded as seconds skew from UTC.
	DeviceTimeZoneOffsetSeconds int32 `protobuf:"varint,10,opt,name=device_time_zone_offset_seconds,json=deviceTimeZoneOffsetSeconds,proto3" json:"device_time_zone_offset_seconds,omitempty"`
	// The device's Limit Ad Tracking setting.
	// When true, we cannot use device_id for remarketing, demographics or
	// influencing ads serving behaviour. However, we can use device_id for
	// conversion tracking and campaign attribution.
	LimitedAdTracking bool `protobuf:"varint,11,opt,name=limited_ad_tracking,json=limitedAdTracking,proto3" json:"limited_ad_tracking,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceInfo) GetDeviceCategory() string {
	if x != nil {
		return x.DeviceCategory
	}
	return ""
}

func (x *DeviceInfo) GetMobileBrandName() string {
	if x != nil {
		return x.MobileBrandName
	}
	return ""
}

func (x *DeviceInfo) GetMobileModelName() string {
	if x != nil {
		return x.MobileModelName
	}
	return ""
}

func (x *DeviceInfo) GetMobileMarketingName() string {
	if x != nil {
		return x.MobileMarketingName
	}
	return ""
}

func (x *DeviceInfo) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *DeviceInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *DeviceInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceInfo) GetResettableDeviceId() string {
	if x != nil {
		return x.ResettableDeviceId
	}
	return ""
}

func (x *DeviceInfo) GetUserDefaultLanguage() string {
	if x != nil {
		return x.UserDefaultLanguage
	}
	return ""
}

func (x *DeviceInfo) GetDeviceTimeZoneOffsetSeconds() int32 {
	if x != nil {
		return x.DeviceTimeZoneOffsetSeconds
	}
	return 0
}

func (x *DeviceInfo) GetLimitedAdTracking() bool {
	if x != nil {
		return x.LimitedAdTracking
	}
	return false
}

// Message which contains App Information.
type AppInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The app's version name
	// Examples: "1.0", "4.3.1.1.213361", "2.3 (1824253)", "v1.8b22p6"
	AppVersion string `protobuf:"bytes,1,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	// Unique id for this instance of the app.
	// Example: "71683BF9FA3B4B0D9535A1F05188BAF3"
	AppInstanceId string `protobuf:"bytes,2,opt,name=app_instance_id,json=appInstanceId,proto3" json:"app_instance_id,omitempty"`
	// The identifier of the store that installed the app.
	// Eg. "com.sec.android.app.samsungapps", "com.amazon.venezia",
	// "com.nokia.nstore"
	AppStore string `protobuf:"bytes,3,opt,name=app_store,json=appStore,proto3" json:"app_store,omitempty"`
	// The app platform.
	// Eg "ANDROID", "IOS".
	AppPlatform string `protobuf:"bytes,4,opt,name=app_platform,json=appPlatform,proto3" json:"app_platform,omitempty"`
	// Unique application identifier within an app store.
	AppId         string `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{5}
}

func (x *AppInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *AppInfo) GetAppInstanceId() string {
	if x != nil {
		return x.AppInstanceId
	}
	return ""
}

func (x *AppInfo) GetAppStore() string {
	if x != nil {
		return x.AppStore
	}
	return ""
}

func (x *AppInfo) GetAppPlatform() string {
	if x != nil {
		return x.AppPlatform
	}
	return ""
}

func (x *AppInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// User's geographic informaiton.
type GeoInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The geographic continent.
	// Eg. Americas
	Continent string `protobuf:"bytes,1,opt,name=continent,proto3" json:"continent,omitempty"`
	// The geographic country.
	// Eg. Brazil
	Country string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	// The geographic region.
	// Eg. State of Sao Paulo
	Region string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	// The geographic city.
	// Eg. Sao Paulo
	City          string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GeoInfo) Reset() {
	*x = GeoInfo{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoInfo) ProtoMessage() {}

func (x *GeoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoInfo.ProtoReflect.Descriptor instead.
func (*GeoInfo) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *GeoInfo) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *GeoInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GeoInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GeoInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

// Mesage containing marketing campaign information which acquired the user.
type TrafficSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the campaign which acquired the user.
	UserAcquiredCampaign string `protobuf:"bytes,2,opt,name=user_acquired_campaign,json=userAcquiredCampaign,proto3" json:"user_acquired_campaign,omitempty"`
	// The name of the network which acquired the user.
	UserAcquiredSource string `protobuf:"bytes,3,opt,name=user_acquired_source,json=userAcquiredSource,proto3" json:"user_acquired_source,omitempty"`
	// The name of the medium which acquired the user.
	UserAcquiredMedium string `protobuf:"bytes,4,opt,name=user_acquired_medium,json=userAcquiredMedium,proto3" json:"user_acquired_medium,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TrafficSource) Reset() {
	*x = TrafficSource{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficSource) ProtoMessage() {}

func (x *TrafficSource) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficSource.ProtoReflect.Descriptor instead.
func (*TrafficSource) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{7}
}

func (x *TrafficSource) GetUserAcquiredCampaign() string {
	if x != nil {
		return x.UserAcquiredCampaign
	}
	return ""
}

func (x *TrafficSource) GetUserAcquiredSource() string {
	if x != nil {
		return x.UserAcquiredSource
	}
	return ""
}

func (x *TrafficSource) GetUserAcquiredMedium() string {
	if x != nil {
		return x.UserAcquiredMedium
	}
	return ""
}

// Message containing information regarding the bundle in which these
// events were uploaded.
type ExportBundleInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Monotonically increasing index for each bundle set by SDK.
	BundleSequenceId int32 `protobuf:"varint,1,opt,name=bundle_sequence_id,json=bundleSequenceId,proto3" json:"bundle_sequence_id,omitempty"`
	// Timestamp offset between collection time and upload time.
	ServerTimestampOffsetMicros int64 `protobuf:"varint,2,opt,name=server_timestamp_offset_micros,json=serverTimestampOffsetMicros,proto3" json:"server_timestamp_offset_micros,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ExportBundleInfo) Reset() {
	*x = ExportBundleInfo{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportBundleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportBundleInfo) ProtoMessage() {}

func (x *ExportBundleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportBundleInfo.ProtoReflect.Descriptor instead.
func (*ExportBundleInfo) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{8}
}

func (x *ExportBundleInfo) GetBundleSequenceId() int32 {
	if x != nil {
		return x.BundleSequenceId
	}
	return 0
}

func (x *ExportBundleInfo) GetServerTimestampOffsetMicros() int64 {
	if x != nil {
		return x.ServerTimestampOffsetMicros
	}
	return 0
}

// Lifetime Value information about this user.
type LtvInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Lifetime Value revenue of this user.
	Revenue float64 `protobuf:"fixed64,1,opt,name=revenue,proto3" json:"revenue,omitempty"`
	// The currency corresponding to the revenue.
	Currency      string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LtvInfo) Reset() {
	*x = LtvInfo{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LtvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LtvInfo) ProtoMessage() {}

func (x *LtvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LtvInfo.ProtoReflect.Descriptor instead.
func (*LtvInfo) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{9}
}

func (x *LtvInfo) GetRevenue() float64 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

func (x *LtvInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

// Message containing information pertaining to the event.
type EventDimensions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The date on which this event was logged.
	// (YYYYMMDD format in the registered timezone of your app.)
	Date string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	// The name of this event.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A repeated record of the parameters associated with this event.
	Params map[string]*AnalyticsValue `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// UTC client time when the event happened.
	TimestampMicros int64 `protobuf:"varint,4,opt,name=timestamp_micros,json=timestampMicros,proto3" json:"timestamp_micros,omitempty"`
	// UTC client time when the previous event happened.
	PreviousTimestampMicros int64 `protobuf:"varint,5,opt,name=previous_timestamp_micros,json=previousTimestampMicros,proto3" json:"previous_timestamp_micros,omitempty"`
	// Value param in USD.
	ValueInUsd    float64 `protobuf:"fixed64,7,opt,name=value_in_usd,json=valueInUsd,proto3" json:"value_in_usd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventDimensions) Reset() {
	*x = EventDimensions{}
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDimensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDimensions) ProtoMessage() {}

func (x *EventDimensions) ProtoReflect() protoreflect.Message {
	mi := &file_firebase_analytics_v1_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDimensions.ProtoReflect.Descriptor instead.
func (*EventDimensions) Descriptor() ([]byte, []int) {
	return file_firebase_analytics_v1_data_proto_rawDescGZIP(), []int{10}
}

func (x *EventDimensions) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *EventDimensions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventDimensions) GetParams() map[string]*AnalyticsValue {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *EventDimensions) GetTimestampMicros() int64 {
	if x != nil {
		return x.TimestampMicros
	}
	return 0
}

func (x *EventDimensions) GetPreviousTimestampMicros() int64 {
	if x != nil {
		return x.PreviousTimestampMicros
	}
	return 0
}

func (x *EventDimensions) GetValueInUsd() float64 {
	if x != nil {
		return x.ValueInUsd
	}
	return 0
}

var File_firebase_analytics_v1_data_proto protoreflect.FileDescriptor

const file_firebase_analytics_v1_data_proto_rawDesc = "" +
	"\n" +
	" firebase/analytics/v1/data.proto\x12#google.events.firebase.analytics.v1\"\xb5\x01\n" +
	"\x10AnalyticsLogData\x12N\n" +
	"\buser_dim\x18\x01 \x01(\v23.google.events.firebase.analytics.v1.UserDimensionsR\auserDim\x12Q\n" +
	"\tevent_dim\x18\x02 \x03(\v24.google.events.firebase.analytics.v1.EventDimensionsR\beventDim\"\xb5\x06\n" +
	"\x0eUserDimensions\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12=\n" +
	"\x1bfirst_open_timestamp_micros\x18\x02 \x01(\x03R\x18firstOpenTimestampMicros\x12p\n" +
	"\x0fuser_properties\x18\x03 \x03(\v2G.google.events.firebase.analytics.v1.UserDimensions.UserPropertiesEntryR\x0euserProperties\x12P\n" +
	"\vdevice_info\x18\x04 \x01(\v2/.google.events.firebase.analytics.v1.DeviceInfoR\n" +
	"deviceInfo\x12G\n" +
	"\bgeo_info\x18\x05 \x01(\v2,.google.events.firebase.analytics.v1.GeoInfoR\ageoInfo\x12G\n" +
	"\bapp_info\x18\x06 \x01(\v2,.google.events.firebase.analytics.v1.AppInfoR\aappInfo\x12Y\n" +
	"\x0etraffic_source\x18\a \x01(\v22.google.events.firebase.analytics.v1.TrafficSourceR\rtrafficSource\x12V\n" +
	"\vbundle_info\x18\b \x01(\v25.google.events.firebase.analytics.v1.ExportBundleInfoR\n" +
	"bundleInfo\x12G\n" +
	"\bltv_info\x18\t \x01(\v2,.google.events.firebase.analytics.v1.LtvInfoR\altvInfo\x1ay\n" +
	"\x13UserPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12L\n" +
	"\x05value\x18\x02 \x01(\v26.google.events.firebase.analytics.v1.UserPropertyValueR\x05value:\x028\x01\"\xa2\x01\n" +
	"\x11UserPropertyValue\x12I\n" +
	"\x05value\x18\x01 \x01(\v23.google.events.firebase.analytics.v1.AnalyticsValueR\x05value\x12,\n" +
	"\x12set_timestamp_usec\x18\x02 \x01(\x03R\x10setTimestampUsec\x12\x14\n" +
	"\x05index\x18\x03 \x01(\x05R\x05index\"\xab\x01\n" +
	"\x0eAnalyticsValue\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12\x1d\n" +
	"\tint_value\x18\x02 \x01(\x03H\x00R\bintValue\x12!\n" +
	"\vfloat_value\x18\x03 \x01(\x02H\x00R\n" +
	"floatValue\x12#\n" +
	"\fdouble_value\x18\x04 \x01(\x01H\x00R\vdoubleValueB\r\n" +
	"\vparam_value\"\x88\x04\n" +
	"\n" +
	"DeviceInfo\x12'\n" +
	"\x0fdevice_category\x18\x01 \x01(\tR\x0edeviceCategory\x12*\n" +
	"\x11mobile_brand_name\x18\x02 \x01(\tR\x0fmobileBrandName\x12*\n" +
	"\x11mobile_model_name\x18\x03 \x01(\tR\x0fmobileModelName\x122\n" +
	"\x15mobile_marketing_name\x18\x04 \x01(\tR\x13mobileMarketingName\x12!\n" +
	"\fdevice_model\x18\f \x01(\tR\vdeviceModel\x12)\n" +
	"\x10platform_version\x18\x06 \x01(\tR\x0fplatformVersion\x12\x1b\n" +
	"\tdevice_id\x18\a \x01(\tR\bdeviceId\x120\n" +
	"\x14resettable_device_id\x18\b \x01(\tR\x12resettableDeviceId\x122\n" +
	"\x15user_default_language\x18\t \x01(\tR\x13userDefaultLanguage\x12D\n" +
	"\x1fdevice_time_zone_offset_seconds\x18\n" +
	" \x01(\x05R\x1bdeviceTimeZoneOffsetSeconds\x12.\n" +
	"\x13limited_ad_tracking\x18\v \x01(\bR\x11limitedAdTracking\"\xa9\x01\n" +
	"\aAppInfo\x12\x1f\n" +
	"\vapp_version\x18\x01 \x01(\tR\n" +
	"appVersion\x12&\n" +
	"\x0fapp_instance_id\x18\x02 \x01(\tR\rappInstanceId\x12\x1b\n" +
	"\tapp_store\x18\x03 \x01(\tR\bappStore\x12!\n" +
	"\fapp_platform\x18\x04 \x01(\tR\vappPlatform\x12\x15\n" +
	"\x06app_id\x18\x05 \x01(\tR\x05appId\"m\n" +
	"\aGeoInfo\x12\x1c\n" +
	"\tcontinent\x18\x01 \x01(\tR\tcontinent\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\x12\x12\n" +
	"\x04city\x18\x04 \x01(\tR\x04city\"\xa9\x01\n" +
	"\rTrafficSource\x124\n" +
	"\x16user_acquired_campaign\x18\x02 \x01(\tR\x14userAcquiredCampaign\x120\n" +
	"\x14user_acquired_source\x18\x03 \x01(\tR\x12userAcquiredSource\x120\n" +
	"\x14user_acquired_medium\x18\x04 \x01(\tR\x12userAcquiredMedium\"\x85\x01\n" +
	"\x10ExportBundleInfo\x12,\n" +
	"\x12bundle_sequence_id\x18\x01 \x01(\x05R\x10bundleSequenceId\x12C\n" +
	"\x1eserver_timestamp_offset_micros\x18\x02 \x01(\x03R\x1bserverTimestampOffsetMicros\"?\n" +
	"\aLtvInfo\x12\x18\n" +
	"\arevenue\x18\x01 \x01(\x01R\arevenue\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"\x8c\x03\n" +
	"\x0fEventDimensions\x12\x12\n" +
	"\x04date\x18\x06 \x01(\tR\x04date\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12X\n" +
	"\x06params\x18\x02 \x03(\v2@.google.events.firebase.analytics.v1.EventDimensions.ParamsEntryR\x06params\x12)\n" +
	"\x10timestamp_micros\x18\x04 \x01(\x03R\x0ftimestampMicros\x12:\n" +
	"\x19previous_timestamp_micros\x18\x05 \x01(\x03R\x17previousTimestampMicros\x12 \n" +
	"\fvalue_in_usd\x18\a \x01(\x01R\n" +
	"valueInUsd\x1an\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12I\n" +
	"\x05value\x18\x02 \x01(\v23.google.events.firebase.analytics.v1.AnalyticsValueR\x05value:\x028\x01B\x7f\xaa\x02,Google.Events.Protobuf.Firebase.Analytics.V1\xca\x02#Google\\Events\\Firebase\\Analytics\\V1\xea\x02'Google::Events::Firebase::Analytics::V1b\x06proto3"

var (
	file_firebase_analytics_v1_data_proto_rawDescOnce sync.Once
	file_firebase_analytics_v1_data_proto_rawDescData []byte
)

func file_firebase_analytics_v1_data_proto_rawDescGZIP() []byte {
	file_firebase_analytics_v1_data_proto_rawDescOnce.Do(func() {
		file_firebase_analytics_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_firebase_analytics_v1_data_proto_rawDesc), len(file_firebase_analytics_v1_data_proto_rawDesc)))
	})
	return file_firebase_analytics_v1_data_proto_rawDescData
}

var file_firebase_analytics_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_firebase_analytics_v1_data_proto_goTypes = []any{
	(*AnalyticsLogData)(nil),  // 0: google.events.firebase.analytics.v1.AnalyticsLogData
	(*UserDimensions)(nil),    // 1: google.events.firebase.analytics.v1.UserDimensions
	(*UserPropertyValue)(nil), // 2: google.events.firebase.analytics.v1.UserPropertyValue
	(*AnalyticsValue)(nil),    // 3: google.events.firebase.analytics.v1.AnalyticsValue
	(*DeviceInfo)(nil),        // 4: google.events.firebase.analytics.v1.DeviceInfo
	(*AppInfo)(nil),           // 5: google.events.firebase.analytics.v1.AppInfo
	(*GeoInfo)(nil),           // 6: google.events.firebase.analytics.v1.GeoInfo
	(*TrafficSource)(nil),     // 7: google.events.firebase.analytics.v1.TrafficSource
	(*ExportBundleInfo)(nil),  // 8: google.events.firebase.analytics.v1.ExportBundleInfo
	(*LtvInfo)(nil),           // 9: google.events.firebase.analytics.v1.LtvInfo
	(*EventDimensions)(nil),   // 10: google.events.firebase.analytics.v1.EventDimensions
	nil,                       // 11: google.events.firebase.analytics.v1.UserDimensions.UserPropertiesEntry
	nil,                       // 12: google.events.firebase.analytics.v1.EventDimensions.ParamsEntry
}
var file_firebase_analytics_v1_data_proto_depIdxs = []int32{
	1,  // 0: google.events.firebase.analytics.v1.AnalyticsLogData.user_dim:type_name -> google.events.firebase.analytics.v1.UserDimensions
	10, // 1: google.events.firebase.analytics.v1.AnalyticsLogData.event_dim:type_name -> google.events.firebase.analytics.v1.EventDimensions
	11, // 2: google.events.firebase.analytics.v1.UserDimensions.user_properties:type_name -> google.events.firebase.analytics.v1.UserDimensions.UserPropertiesEntry
	4,  // 3: google.events.firebase.analytics.v1.UserDimensions.device_info:type_name -> google.events.firebase.analytics.v1.DeviceInfo
	6,  // 4: google.events.firebase.analytics.v1.UserDimensions.geo_info:type_name -> google.events.firebase.analytics.v1.GeoInfo
	5,  // 5: google.events.firebase.analytics.v1.UserDimensions.app_info:type_name -> google.events.firebase.analytics.v1.AppInfo
	7,  // 6: google.events.firebase.analytics.v1.UserDimensions.traffic_source:type_name -> google.events.firebase.analytics.v1.TrafficSource
	8,  // 7: google.events.firebase.analytics.v1.UserDimensions.bundle_info:type_name -> google.events.firebase.analytics.v1.ExportBundleInfo
	9,  // 8: google.events.firebase.analytics.v1.UserDimensions.ltv_info:type_name -> google.events.firebase.analytics.v1.LtvInfo
	3,  // 9: google.events.firebase.analytics.v1.UserPropertyValue.value:type_name -> google.events.firebase.analytics.v1.AnalyticsValue
	12, // 10: google.events.firebase.analytics.v1.EventDimensions.params:type_name -> google.events.firebase.analytics.v1.EventDimensions.ParamsEntry
	2,  // 11: google.events.firebase.analytics.v1.UserDimensions.UserPropertiesEntry.value:type_name -> google.events.firebase.analytics.v1.UserPropertyValue
	3,  // 12: google.events.firebase.analytics.v1.EventDimensions.ParamsEntry.value:type_name -> google.events.firebase.analytics.v1.AnalyticsValue
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_firebase_analytics_v1_data_proto_init() }
func file_firebase_analytics_v1_data_proto_init() {
	if File_firebase_analytics_v1_data_proto != nil {
		return
	}
	file_firebase_analytics_v1_data_proto_msgTypes[3].OneofWrappers = []any{
		(*AnalyticsValue_StringValue)(nil),
		(*AnalyticsValue_IntValue)(nil),
		(*AnalyticsValue_FloatValue)(nil),
		(*AnalyticsValue_DoubleValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_firebase_analytics_v1_data_proto_rawDesc), len(file_firebase_analytics_v1_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_firebase_analytics_v1_data_proto_goTypes,
		DependencyIndexes: file_firebase_analytics_v1_data_proto_depIdxs,
		MessageInfos:      file_firebase_analytics_v1_data_proto_msgTypes,
	}.Build()
	File_firebase_analytics_v1_data_proto = out.File
	file_firebase_analytics_v1_data_proto_goTypes = nil
	file_firebase_analytics_v1_data_proto_depIdxs = nil
}
