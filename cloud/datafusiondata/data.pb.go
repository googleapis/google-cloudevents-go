// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.6
// source: cloud/datafusion/v1/data.proto

package datafusiondata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Each type represents the release availability of a CDF version
type Version_Type int32

const (
	// Version does not have availability yet
	Version_TYPE_UNSPECIFIED Version_Type = 0
	// Version is under development and not considered stable
	Version_TYPE_PREVIEW Version_Type = 1
	// Version is available for public use
	Version_TYPE_GENERAL_AVAILABILITY Version_Type = 2
)

// Enum value maps for Version_Type.
var (
	Version_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_PREVIEW",
		2: "TYPE_GENERAL_AVAILABILITY",
	}
	Version_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":          0,
		"TYPE_PREVIEW":              1,
		"TYPE_GENERAL_AVAILABILITY": 2,
	}
)

func (x Version_Type) Enum() *Version_Type {
	p := new(Version_Type)
	*p = x
	return p
}

func (x Version_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Version_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_datafusion_v1_data_proto_enumTypes[0].Descriptor()
}

func (Version_Type) Type() protoreflect.EnumType {
	return &file_cloud_datafusion_v1_data_proto_enumTypes[0]
}

func (x Version_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Version_Type.Descriptor instead.
func (Version_Type) EnumDescriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{1, 0}
}

// Each type represents an Accelerator (Add-On) supported by Cloud Data Fusion
// service.
type Accelerator_AcceleratorType int32

const (
	// Default value, if unspecified.
	Accelerator_ACCELERATOR_TYPE_UNSPECIFIED Accelerator_AcceleratorType = 0
	// Change Data Capture accelerator for CDF.
	Accelerator_CDC Accelerator_AcceleratorType = 1
	// Cloud Healthcare accelerator for CDF. This accelerator is to enable Cloud
	// Healthcare specific CDF plugins developed by Healthcare team.
	Accelerator_HEALTHCARE Accelerator_AcceleratorType = 2
	// Contact Center AI Insights
	// This accelerator is used to enable import and export pipelines
	// custom built to streamline CCAI Insights processing.
	Accelerator_CCAI_INSIGHTS Accelerator_AcceleratorType = 3
)

// Enum value maps for Accelerator_AcceleratorType.
var (
	Accelerator_AcceleratorType_name = map[int32]string{
		0: "ACCELERATOR_TYPE_UNSPECIFIED",
		1: "CDC",
		2: "HEALTHCARE",
		3: "CCAI_INSIGHTS",
	}
	Accelerator_AcceleratorType_value = map[string]int32{
		"ACCELERATOR_TYPE_UNSPECIFIED": 0,
		"CDC":                          1,
		"HEALTHCARE":                   2,
		"CCAI_INSIGHTS":                3,
	}
)

func (x Accelerator_AcceleratorType) Enum() *Accelerator_AcceleratorType {
	p := new(Accelerator_AcceleratorType)
	*p = x
	return p
}

func (x Accelerator_AcceleratorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Accelerator_AcceleratorType) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_datafusion_v1_data_proto_enumTypes[1].Descriptor()
}

func (Accelerator_AcceleratorType) Type() protoreflect.EnumType {
	return &file_cloud_datafusion_v1_data_proto_enumTypes[1]
}

func (x Accelerator_AcceleratorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Accelerator_AcceleratorType.Descriptor instead.
func (Accelerator_AcceleratorType) EnumDescriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{2, 0}
}

// Different values possible for the state of an accelerator.
type Accelerator_State int32

const (
	// Default value, do not use.
	Accelerator_STATE_UNSPECIFIED Accelerator_State = 0
	// Indicates that the accelerator is enabled and available to use.
	Accelerator_ENABLED Accelerator_State = 1
	// Indicates that the accelerator is disabled and not available to use.
	Accelerator_DISABLED Accelerator_State = 2
	// Indicates that accelerator state is currently unknown.
	// Requests for enable, disable could be retried while in this state.
	Accelerator_UNKNOWN Accelerator_State = 3
)

// Enum value maps for Accelerator_State.
var (
	Accelerator_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "ENABLED",
		2: "DISABLED",
		3: "UNKNOWN",
	}
	Accelerator_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"ENABLED":           1,
		"DISABLED":          2,
		"UNKNOWN":           3,
	}
)

func (x Accelerator_State) Enum() *Accelerator_State {
	p := new(Accelerator_State)
	*p = x
	return p
}

func (x Accelerator_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Accelerator_State) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_datafusion_v1_data_proto_enumTypes[2].Descriptor()
}

func (Accelerator_State) Type() protoreflect.EnumType {
	return &file_cloud_datafusion_v1_data_proto_enumTypes[2]
}

func (x Accelerator_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Accelerator_State.Descriptor instead.
func (Accelerator_State) EnumDescriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{2, 1}
}

// Represents the type of Data Fusion instance. Each type is configured with
// the default settings for processing and memory.
type Instance_Type int32

const (
	// No type specified. The instance creation will fail.
	Instance_TYPE_UNSPECIFIED Instance_Type = 0
	// Basic Data Fusion instance. In Basic type, the user will be able to
	// create data pipelines using point and click UI. However, there are
	// certain limitations, such as fewer number of concurrent pipelines, no
	// support for streaming pipelines, etc.
	Instance_BASIC Instance_Type = 1
	// Enterprise Data Fusion instance. In Enterprise type, the user will have
	// all features available, such as support for streaming pipelines, higher
	// number of concurrent pipelines, etc.
	Instance_ENTERPRISE Instance_Type = 2
	// Developer Data Fusion instance. In Developer type, the user will have all
	// features available but with restrictive capabilities. This is to help
	// enterprises design and develop their data ingestion and integration
	// pipelines at low cost.
	Instance_DEVELOPER Instance_Type = 3
)

// Enum value maps for Instance_Type.
var (
	Instance_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "BASIC",
		2: "ENTERPRISE",
		3: "DEVELOPER",
	}
	Instance_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"BASIC":            1,
		"ENTERPRISE":       2,
		"DEVELOPER":        3,
	}
)

func (x Instance_Type) Enum() *Instance_Type {
	p := new(Instance_Type)
	*p = x
	return p
}

func (x Instance_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Instance_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_datafusion_v1_data_proto_enumTypes[3].Descriptor()
}

func (Instance_Type) Type() protoreflect.EnumType {
	return &file_cloud_datafusion_v1_data_proto_enumTypes[3]
}

func (x Instance_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Instance_Type.Descriptor instead.
func (Instance_Type) EnumDescriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{4, 0}
}

// Represents the state of a Data Fusion instance
type Instance_State int32

const (
	// Instance does not have a state yet
	Instance_STATE_UNSPECIFIED Instance_State = 0
	// Instance is being created
	Instance_CREATING Instance_State = 1
	// Instance is active and ready for requests. This corresponds to 'RUNNING'
	// in datafusion.v1beta1.
	Instance_ACTIVE Instance_State = 2
	// Instance creation failed
	Instance_FAILED Instance_State = 3
	// Instance is being deleted
	Instance_DELETING Instance_State = 4
	// Instance is being upgraded
	Instance_UPGRADING Instance_State = 5
	// Instance is being restarted
	Instance_RESTARTING Instance_State = 6
	// Instance is being updated on customer request
	Instance_UPDATING Instance_State = 7
	// Instance is being auto-updated
	Instance_AUTO_UPDATING Instance_State = 8
	// Instance is being auto-upgraded
	Instance_AUTO_UPGRADING Instance_State = 9
	// Instance is disabled
	Instance_DISABLED Instance_State = 10
)

// Enum value maps for Instance_State.
var (
	Instance_State_name = map[int32]string{
		0:  "STATE_UNSPECIFIED",
		1:  "CREATING",
		2:  "ACTIVE",
		3:  "FAILED",
		4:  "DELETING",
		5:  "UPGRADING",
		6:  "RESTARTING",
		7:  "UPDATING",
		8:  "AUTO_UPDATING",
		9:  "AUTO_UPGRADING",
		10: "DISABLED",
	}
	Instance_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"CREATING":          1,
		"ACTIVE":            2,
		"FAILED":            3,
		"DELETING":          4,
		"UPGRADING":         5,
		"RESTARTING":        6,
		"UPDATING":          7,
		"AUTO_UPDATING":     8,
		"AUTO_UPGRADING":    9,
		"DISABLED":          10,
	}
)

func (x Instance_State) Enum() *Instance_State {
	p := new(Instance_State)
	*p = x
	return p
}

func (x Instance_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Instance_State) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_datafusion_v1_data_proto_enumTypes[4].Descriptor()
}

func (Instance_State) Type() protoreflect.EnumType {
	return &file_cloud_datafusion_v1_data_proto_enumTypes[4]
}

func (x Instance_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Instance_State.Descriptor instead.
func (Instance_State) EnumDescriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{4, 1}
}

// The reason for disabling the instance if the state is DISABLED.
type Instance_DisabledReason int32

const (
	// This is an unknown reason for disabling.
	Instance_DISABLED_REASON_UNSPECIFIED Instance_DisabledReason = 0
	// The KMS key used by the instance is either revoked or denied access to
	Instance_KMS_KEY_ISSUE Instance_DisabledReason = 1
)

// Enum value maps for Instance_DisabledReason.
var (
	Instance_DisabledReason_name = map[int32]string{
		0: "DISABLED_REASON_UNSPECIFIED",
		1: "KMS_KEY_ISSUE",
	}
	Instance_DisabledReason_value = map[string]int32{
		"DISABLED_REASON_UNSPECIFIED": 0,
		"KMS_KEY_ISSUE":               1,
	}
)

func (x Instance_DisabledReason) Enum() *Instance_DisabledReason {
	p := new(Instance_DisabledReason)
	*p = x
	return p
}

func (x Instance_DisabledReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Instance_DisabledReason) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_datafusion_v1_data_proto_enumTypes[5].Descriptor()
}

func (Instance_DisabledReason) Type() protoreflect.EnumType {
	return &file_cloud_datafusion_v1_data_proto_enumTypes[5]
}

func (x Instance_DisabledReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Instance_DisabledReason.Descriptor instead.
func (Instance_DisabledReason) EnumDescriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{4, 2}
}

// Network configuration for a Data Fusion instance. These configurations
// are used for peering with the customer network. Configurations are optional
// when a public Data Fusion instance is to be created. However, providing
// these configurations allows several benefits, such as reduced network latency
// while accessing the customer resources from managed Data Fusion instance
// nodes, as well as access to the customer on-prem resources.
type NetworkConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the network in the customer project with which the Tenant Project
	// will be peered for executing pipelines. In case of shared VPC where the
	// network resides in another host project the network should specified in
	// the form of projects/{host-project-id}/global/networks/{network}
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// The IP range in CIDR notation to use for the managed Data Fusion instance
	// nodes. This range must not overlap with any other ranges used in the
	// customer network.
	IpAllocation  string `protobuf:"bytes,2,opt,name=ip_allocation,json=ipAllocation,proto3" json:"ip_allocation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkConfig) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetworkConfig) GetIpAllocation() string {
	if x != nil {
		return x.IpAllocation
	}
	return ""
}

// The Data Fusion version. This proto message stores information about certain
// Data Fusion version, which is used for Data Fusion version upgrade.
type Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The version number of the Data Fusion instance, such as '6.0.1.0'.
	VersionNumber string `protobuf:"bytes,1,opt,name=version_number,json=versionNumber,proto3" json:"version_number,omitempty"`
	// Whether this is currently the default version for Cloud Data Fusion
	DefaultVersion bool `protobuf:"varint,2,opt,name=default_version,json=defaultVersion,proto3" json:"default_version,omitempty"`
	// Represents a list of available feature names for a given version.
	AvailableFeatures []string `protobuf:"bytes,3,rep,name=available_features,json=availableFeatures,proto3" json:"available_features,omitempty"`
	// Type represents the release availability of the version
	Type          Version_Type `protobuf:"varint,4,opt,name=type,proto3,enum=google.events.cloud.datafusion.v1.Version_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *Version) GetVersionNumber() string {
	if x != nil {
		return x.VersionNumber
	}
	return ""
}

func (x *Version) GetDefaultVersion() bool {
	if x != nil {
		return x.DefaultVersion
	}
	return false
}

func (x *Version) GetAvailableFeatures() []string {
	if x != nil {
		return x.AvailableFeatures
	}
	return nil
}

func (x *Version) GetType() Version_Type {
	if x != nil {
		return x.Type
	}
	return Version_TYPE_UNSPECIFIED
}

// Identifies Data Fusion accelerators for an instance.
type Accelerator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of an accelator for a CDF instance.
	AcceleratorType Accelerator_AcceleratorType `protobuf:"varint,1,opt,name=accelerator_type,json=acceleratorType,proto3,enum=google.events.cloud.datafusion.v1.Accelerator_AcceleratorType" json:"accelerator_type,omitempty"`
	// The state of the accelerator.
	State         Accelerator_State `protobuf:"varint,2,opt,name=state,proto3,enum=google.events.cloud.datafusion.v1.Accelerator_State" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Accelerator) Reset() {
	*x = Accelerator{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Accelerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accelerator) ProtoMessage() {}

func (x *Accelerator) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accelerator.ProtoReflect.Descriptor instead.
func (*Accelerator) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *Accelerator) GetAcceleratorType() Accelerator_AcceleratorType {
	if x != nil {
		return x.AcceleratorType
	}
	return Accelerator_ACCELERATOR_TYPE_UNSPECIFIED
}

func (x *Accelerator) GetState() Accelerator_State {
	if x != nil {
		return x.State
	}
	return Accelerator_STATE_UNSPECIFIED
}

// The crypto key configuration. This field is used by the Customer-managed
// encryption keys (CMEK) feature.
type CryptoKeyConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the key which is used to encrypt/decrypt customer data. For key
	// in Cloud KMS, the key should be in the format of
	// `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
	KeyReference  string `protobuf:"bytes,1,opt,name=key_reference,json=keyReference,proto3" json:"key_reference,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CryptoKeyConfig) Reset() {
	*x = CryptoKeyConfig{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CryptoKeyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoKeyConfig) ProtoMessage() {}

func (x *CryptoKeyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoKeyConfig.ProtoReflect.Descriptor instead.
func (*CryptoKeyConfig) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *CryptoKeyConfig) GetKeyReference() string {
	if x != nil {
		return x.KeyReference
	}
	return ""
}

// Represents a Data Fusion instance.
type Instance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The name of this instance is in the form of
	// projects/{project}/locations/{location}/instances/{instance}.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A description of this instance.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Required. Instance type.
	Type Instance_Type `protobuf:"varint,3,opt,name=type,proto3,enum=google.events.cloud.datafusion.v1.Instance_Type" json:"type,omitempty"`
	// Option to enable Stackdriver Logging.
	EnableStackdriverLogging bool `protobuf:"varint,4,opt,name=enable_stackdriver_logging,json=enableStackdriverLogging,proto3" json:"enable_stackdriver_logging,omitempty"`
	// Option to enable Stackdriver Monitoring.
	EnableStackdriverMonitoring bool `protobuf:"varint,5,opt,name=enable_stackdriver_monitoring,json=enableStackdriverMonitoring,proto3" json:"enable_stackdriver_monitoring,omitempty"`
	// Specifies whether the Data Fusion instance should be private. If set to
	// true, all Data Fusion nodes will have private IP addresses and will not be
	// able to access the public internet.
	PrivateInstance bool `protobuf:"varint,6,opt,name=private_instance,json=privateInstance,proto3" json:"private_instance,omitempty"`
	// Network configuration options. These are required when a private Data
	// Fusion instance is to be created.
	NetworkConfig *NetworkConfig `protobuf:"bytes,7,opt,name=network_config,json=networkConfig,proto3" json:"network_config,omitempty"`
	// The resource labels for instance to use to annotate any related underlying
	// resources such as Compute Engine VMs. The character '=' is not allowed to
	// be used within the labels.
	Labels map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Map of additional options used to configure the behavior of
	// Data Fusion instance.
	Options map[string]string `protobuf:"bytes,9,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Output only. The time the instance was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. The time the instance was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. The current state of this Data Fusion instance.
	State Instance_State `protobuf:"varint,12,opt,name=state,proto3,enum=google.events.cloud.datafusion.v1.Instance_State" json:"state,omitempty"`
	// Output only. Additional information about the current state of this Data
	// Fusion instance if available.
	StateMessage string `protobuf:"bytes,13,opt,name=state_message,json=stateMessage,proto3" json:"state_message,omitempty"`
	// Output only. Endpoint on which the Data Fusion UI is accessible.
	ServiceEndpoint string `protobuf:"bytes,14,opt,name=service_endpoint,json=serviceEndpoint,proto3" json:"service_endpoint,omitempty"`
	// Name of the zone in which the Data Fusion instance will be created. Only
	// DEVELOPER instances use this field.
	Zone string `protobuf:"bytes,15,opt,name=zone,proto3" json:"zone,omitempty"`
	// Current version of the Data Fusion. Only specifiable in Update.
	Version string `protobuf:"bytes,16,opt,name=version,proto3" json:"version,omitempty"`
	// Output only. Deprecated. Use tenant_project_id instead to extract the
	// tenant project ID.
	ServiceAccount string `protobuf:"bytes,17,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// Display name for an instance.
	DisplayName string `protobuf:"bytes,18,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Available versions that the instance can be upgraded to using
	// UpdateInstanceRequest.
	AvailableVersion []*Version `protobuf:"bytes,19,rep,name=available_version,json=availableVersion,proto3" json:"available_version,omitempty"`
	// Output only. Endpoint on which the REST APIs is accessible.
	ApiEndpoint string `protobuf:"bytes,20,opt,name=api_endpoint,json=apiEndpoint,proto3" json:"api_endpoint,omitempty"`
	// Output only. Cloud Storage bucket generated by Data Fusion in the customer
	// project.
	GcsBucket string `protobuf:"bytes,21,opt,name=gcs_bucket,json=gcsBucket,proto3" json:"gcs_bucket,omitempty"`
	// List of accelerators enabled for this CDF instance.
	Accelerators []*Accelerator `protobuf:"bytes,22,rep,name=accelerators,proto3" json:"accelerators,omitempty"`
	// Output only. P4 service account for the customer project.
	P4ServiceAccount string `protobuf:"bytes,23,opt,name=p4_service_account,json=p4ServiceAccount,proto3" json:"p4_service_account,omitempty"`
	// Output only. The name of the tenant project.
	TenantProjectId string `protobuf:"bytes,24,opt,name=tenant_project_id,json=tenantProjectId,proto3" json:"tenant_project_id,omitempty"`
	// User-managed service account to set on Dataproc when Cloud Data Fusion
	// creates Dataproc to run data processing pipelines.
	//
	// This allows users to have fine-grained access control on Dataproc's
	// accesses to cloud resources.
	DataprocServiceAccount string `protobuf:"bytes,25,opt,name=dataproc_service_account,json=dataprocServiceAccount,proto3" json:"dataproc_service_account,omitempty"`
	// Option to enable granular role-based access control.
	EnableRbac bool `protobuf:"varint,27,opt,name=enable_rbac,json=enableRbac,proto3" json:"enable_rbac,omitempty"`
	// The crypto key configuration. This field is used by the Customer-Managed
	// Encryption Keys (CMEK) feature.
	CryptoKeyConfig *CryptoKeyConfig `protobuf:"bytes,28,opt,name=crypto_key_config,json=cryptoKeyConfig,proto3" json:"crypto_key_config,omitempty"`
	// Output only. If the instance state is DISABLED, the reason for disabling
	// the instance.
	DisabledReason []Instance_DisabledReason `protobuf:"varint,29,rep,packed,name=disabled_reason,json=disabledReason,proto3,enum=google.events.cloud.datafusion.v1.Instance_DisabledReason" json:"disabled_reason,omitempty"`
	// Option to enable and pass metadata for event publishing.
	EventPublishConfig *EventPublishConfig `protobuf:"bytes,30,opt,name=event_publish_config,json=eventPublishConfig,proto3" json:"event_publish_config,omitempty"`
	// Option to enable granular zone separation.
	EnableZoneSeparation bool `protobuf:"varint,31,opt,name=enable_zone_separation,json=enableZoneSeparation,proto3" json:"enable_zone_separation,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Instance) Reset() {
	*x = Instance{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *Instance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instance) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Instance) GetType() Instance_Type {
	if x != nil {
		return x.Type
	}
	return Instance_TYPE_UNSPECIFIED
}

func (x *Instance) GetEnableStackdriverLogging() bool {
	if x != nil {
		return x.EnableStackdriverLogging
	}
	return false
}

func (x *Instance) GetEnableStackdriverMonitoring() bool {
	if x != nil {
		return x.EnableStackdriverMonitoring
	}
	return false
}

func (x *Instance) GetPrivateInstance() bool {
	if x != nil {
		return x.PrivateInstance
	}
	return false
}

func (x *Instance) GetNetworkConfig() *NetworkConfig {
	if x != nil {
		return x.NetworkConfig
	}
	return nil
}

func (x *Instance) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Instance) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Instance) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Instance) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Instance) GetState() Instance_State {
	if x != nil {
		return x.State
	}
	return Instance_STATE_UNSPECIFIED
}

func (x *Instance) GetStateMessage() string {
	if x != nil {
		return x.StateMessage
	}
	return ""
}

func (x *Instance) GetServiceEndpoint() string {
	if x != nil {
		return x.ServiceEndpoint
	}
	return ""
}

func (x *Instance) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Instance) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Instance) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *Instance) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Instance) GetAvailableVersion() []*Version {
	if x != nil {
		return x.AvailableVersion
	}
	return nil
}

func (x *Instance) GetApiEndpoint() string {
	if x != nil {
		return x.ApiEndpoint
	}
	return ""
}

func (x *Instance) GetGcsBucket() string {
	if x != nil {
		return x.GcsBucket
	}
	return ""
}

func (x *Instance) GetAccelerators() []*Accelerator {
	if x != nil {
		return x.Accelerators
	}
	return nil
}

func (x *Instance) GetP4ServiceAccount() string {
	if x != nil {
		return x.P4ServiceAccount
	}
	return ""
}

func (x *Instance) GetTenantProjectId() string {
	if x != nil {
		return x.TenantProjectId
	}
	return ""
}

func (x *Instance) GetDataprocServiceAccount() string {
	if x != nil {
		return x.DataprocServiceAccount
	}
	return ""
}

func (x *Instance) GetEnableRbac() bool {
	if x != nil {
		return x.EnableRbac
	}
	return false
}

func (x *Instance) GetCryptoKeyConfig() *CryptoKeyConfig {
	if x != nil {
		return x.CryptoKeyConfig
	}
	return nil
}

func (x *Instance) GetDisabledReason() []Instance_DisabledReason {
	if x != nil {
		return x.DisabledReason
	}
	return nil
}

func (x *Instance) GetEventPublishConfig() *EventPublishConfig {
	if x != nil {
		return x.EventPublishConfig
	}
	return nil
}

func (x *Instance) GetEnableZoneSeparation() bool {
	if x != nil {
		return x.EnableZoneSeparation
	}
	return false
}

// Confirguration of PubSubEventWriter.
type EventPublishConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Option to enable Event Publishing.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Required. The resource name of the Pub/Sub topic.
	// Format: projects/{project_id}/topics/{topic_id}
	Topic         string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventPublishConfig) Reset() {
	*x = EventPublishConfig{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventPublishConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPublishConfig) ProtoMessage() {}

func (x *EventPublishConfig) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPublishConfig.ProtoReflect.Descriptor instead.
func (*EventPublishConfig) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{5}
}

func (x *EventPublishConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EventPublishConfig) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// DNS peering configuration. These configurations are used to create
// DNS peering with the customer Cloud DNS.
type DnsPeering struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The resource name of the dns peering zone.
	// Format:
	// projects/{project}/locations/{location}/instances/{instance}/dnsPeerings/{dns_peering}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The dns name suffix of the zone.
	Domain string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	// Optional. Optional description of the dns zone.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. Optional target project to which dns peering should happen.
	TargetProject string `protobuf:"bytes,4,opt,name=target_project,json=targetProject,proto3" json:"target_project,omitempty"`
	// Optional. Optional target network to which dns peering should happen.
	TargetNetwork string `protobuf:"bytes,5,opt,name=target_network,json=targetNetwork,proto3" json:"target_network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DnsPeering) Reset() {
	*x = DnsPeering{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsPeering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsPeering) ProtoMessage() {}

func (x *DnsPeering) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsPeering.ProtoReflect.Descriptor instead.
func (*DnsPeering) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *DnsPeering) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DnsPeering) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DnsPeering) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DnsPeering) GetTargetProject() string {
	if x != nil {
		return x.TargetProject
	}
	return ""
}

func (x *DnsPeering) GetTargetNetwork() string {
	if x != nil {
		return x.TargetNetwork
	}
	return ""
}

// The data within all Instance events.
type InstanceEventData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The Instance event payload. Unset for deletion events.
	Payload       *Instance `protobuf:"bytes,1,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstanceEventData) Reset() {
	*x = InstanceEventData{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstanceEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceEventData) ProtoMessage() {}

func (x *InstanceEventData) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceEventData.ProtoReflect.Descriptor instead.
func (*InstanceEventData) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{7}
}

func (x *InstanceEventData) GetPayload() *Instance {
	if x != nil {
		return x.Payload
	}
	return nil
}

// The data within all DnsPeering events.
type DnsPeeringEventData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The DnsPeering event payload. Unset for deletion events.
	Payload       *DnsPeering `protobuf:"bytes,1,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DnsPeeringEventData) Reset() {
	*x = DnsPeeringEventData{}
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsPeeringEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsPeeringEventData) ProtoMessage() {}

func (x *DnsPeeringEventData) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_datafusion_v1_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsPeeringEventData.ProtoReflect.Descriptor instead.
func (*DnsPeeringEventData) Descriptor() ([]byte, []int) {
	return file_cloud_datafusion_v1_data_proto_rawDescGZIP(), []int{8}
}

func (x *DnsPeeringEventData) GetPayload() *DnsPeering {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_cloud_datafusion_v1_data_proto protoreflect.FileDescriptor

const file_cloud_datafusion_v1_data_proto_rawDesc = "" +
	"\n" +
	"\x1ecloud/datafusion/v1/data.proto\x12!google.events.cloud.datafusion.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"N\n" +
	"\rNetworkConfig\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12#\n" +
	"\rip_allocation\x18\x02 \x01(\tR\fipAllocation\"\x9c\x02\n" +
	"\aVersion\x12%\n" +
	"\x0eversion_number\x18\x01 \x01(\tR\rversionNumber\x12'\n" +
	"\x0fdefault_version\x18\x02 \x01(\bR\x0edefaultVersion\x12-\n" +
	"\x12available_features\x18\x03 \x03(\tR\x11availableFeatures\x12C\n" +
	"\x04type\x18\x04 \x01(\x0e2/.google.events.cloud.datafusion.v1.Version.TypeR\x04type\"M\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fTYPE_PREVIEW\x10\x01\x12\x1d\n" +
	"\x19TYPE_GENERAL_AVAILABILITY\x10\x02\"\xed\x02\n" +
	"\vAccelerator\x12i\n" +
	"\x10accelerator_type\x18\x01 \x01(\x0e2>.google.events.cloud.datafusion.v1.Accelerator.AcceleratorTypeR\x0facceleratorType\x12J\n" +
	"\x05state\x18\x02 \x01(\x0e24.google.events.cloud.datafusion.v1.Accelerator.StateR\x05state\"_\n" +
	"\x0fAcceleratorType\x12 \n" +
	"\x1cACCELERATOR_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03CDC\x10\x01\x12\x0e\n" +
	"\n" +
	"HEALTHCARE\x10\x02\x12\x11\n" +
	"\rCCAI_INSIGHTS\x10\x03\"F\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01\x12\f\n" +
	"\bDISABLED\x10\x02\x12\v\n" +
	"\aUNKNOWN\x10\x03\"6\n" +
	"\x0fCryptoKeyConfig\x12#\n" +
	"\rkey_reference\x18\x01 \x01(\tR\fkeyReference\"\x82\x11\n" +
	"\bInstance\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12D\n" +
	"\x04type\x18\x03 \x01(\x0e20.google.events.cloud.datafusion.v1.Instance.TypeR\x04type\x12<\n" +
	"\x1aenable_stackdriver_logging\x18\x04 \x01(\bR\x18enableStackdriverLogging\x12B\n" +
	"\x1denable_stackdriver_monitoring\x18\x05 \x01(\bR\x1benableStackdriverMonitoring\x12)\n" +
	"\x10private_instance\x18\x06 \x01(\bR\x0fprivateInstance\x12W\n" +
	"\x0enetwork_config\x18\a \x01(\v20.google.events.cloud.datafusion.v1.NetworkConfigR\rnetworkConfig\x12O\n" +
	"\x06labels\x18\b \x03(\v27.google.events.cloud.datafusion.v1.Instance.LabelsEntryR\x06labels\x12R\n" +
	"\aoptions\x18\t \x03(\v28.google.events.cloud.datafusion.v1.Instance.OptionsEntryR\aoptions\x12;\n" +
	"\vcreate_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x12G\n" +
	"\x05state\x18\f \x01(\x0e21.google.events.cloud.datafusion.v1.Instance.StateR\x05state\x12#\n" +
	"\rstate_message\x18\r \x01(\tR\fstateMessage\x12)\n" +
	"\x10service_endpoint\x18\x0e \x01(\tR\x0fserviceEndpoint\x12\x12\n" +
	"\x04zone\x18\x0f \x01(\tR\x04zone\x12\x18\n" +
	"\aversion\x18\x10 \x01(\tR\aversion\x12'\n" +
	"\x0fservice_account\x18\x11 \x01(\tR\x0eserviceAccount\x12!\n" +
	"\fdisplay_name\x18\x12 \x01(\tR\vdisplayName\x12W\n" +
	"\x11available_version\x18\x13 \x03(\v2*.google.events.cloud.datafusion.v1.VersionR\x10availableVersion\x12!\n" +
	"\fapi_endpoint\x18\x14 \x01(\tR\vapiEndpoint\x12\x1d\n" +
	"\n" +
	"gcs_bucket\x18\x15 \x01(\tR\tgcsBucket\x12R\n" +
	"\faccelerators\x18\x16 \x03(\v2..google.events.cloud.datafusion.v1.AcceleratorR\faccelerators\x12,\n" +
	"\x12p4_service_account\x18\x17 \x01(\tR\x10p4ServiceAccount\x12*\n" +
	"\x11tenant_project_id\x18\x18 \x01(\tR\x0ftenantProjectId\x128\n" +
	"\x18dataproc_service_account\x18\x19 \x01(\tR\x16dataprocServiceAccount\x12\x1f\n" +
	"\venable_rbac\x18\x1b \x01(\bR\n" +
	"enableRbac\x12^\n" +
	"\x11crypto_key_config\x18\x1c \x01(\v22.google.events.cloud.datafusion.v1.CryptoKeyConfigR\x0fcryptoKeyConfig\x12c\n" +
	"\x0fdisabled_reason\x18\x1d \x03(\x0e2:.google.events.cloud.datafusion.v1.Instance.DisabledReasonR\x0edisabledReason\x12g\n" +
	"\x14event_publish_config\x18\x1e \x01(\v25.google.events.cloud.datafusion.v1.EventPublishConfigR\x12eventPublishConfig\x124\n" +
	"\x16enable_zone_separation\x18\x1f \x01(\bR\x14enableZoneSeparation\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"F\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05BASIC\x10\x01\x12\x0e\n" +
	"\n" +
	"ENTERPRISE\x10\x02\x12\r\n" +
	"\tDEVELOPER\x10\x03\"\xb4\x01\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03\x12\f\n" +
	"\bDELETING\x10\x04\x12\r\n" +
	"\tUPGRADING\x10\x05\x12\x0e\n" +
	"\n" +
	"RESTARTING\x10\x06\x12\f\n" +
	"\bUPDATING\x10\a\x12\x11\n" +
	"\rAUTO_UPDATING\x10\b\x12\x12\n" +
	"\x0eAUTO_UPGRADING\x10\t\x12\f\n" +
	"\bDISABLED\x10\n" +
	"\"D\n" +
	"\x0eDisabledReason\x12\x1f\n" +
	"\x1bDISABLED_REASON_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rKMS_KEY_ISSUE\x10\x01\"D\n" +
	"\x12EventPublishConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\"\xa8\x01\n" +
	"\n" +
	"DnsPeering\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12%\n" +
	"\x0etarget_project\x18\x04 \x01(\tR\rtargetProject\x12%\n" +
	"\x0etarget_network\x18\x05 \x01(\tR\rtargetNetwork\"k\n" +
	"\x11InstanceEventData\x12J\n" +
	"\apayload\x18\x01 \x01(\v2+.google.events.cloud.datafusion.v1.InstanceH\x00R\apayload\x88\x01\x01B\n" +
	"\n" +
	"\b_payload\"o\n" +
	"\x13DnsPeeringEventData\x12L\n" +
	"\apayload\x18\x01 \x01(\v2-.google.events.cloud.datafusion.v1.DnsPeeringH\x00R\apayload\x88\x01\x01B\n" +
	"\n" +
	"\b_payloadBy\xaa\x02*Google.Events.Protobuf.Cloud.DataFusion.V1\xca\x02!Google\\Events\\Cloud\\DataFusion\\V1\xea\x02%Google::Events::Cloud::DataFusion::V1b\x06proto3"

var (
	file_cloud_datafusion_v1_data_proto_rawDescOnce sync.Once
	file_cloud_datafusion_v1_data_proto_rawDescData []byte
)

func file_cloud_datafusion_v1_data_proto_rawDescGZIP() []byte {
	file_cloud_datafusion_v1_data_proto_rawDescOnce.Do(func() {
		file_cloud_datafusion_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cloud_datafusion_v1_data_proto_rawDesc), len(file_cloud_datafusion_v1_data_proto_rawDesc)))
	})
	return file_cloud_datafusion_v1_data_proto_rawDescData
}

var file_cloud_datafusion_v1_data_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_cloud_datafusion_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cloud_datafusion_v1_data_proto_goTypes = []any{
	(Version_Type)(0),                // 0: google.events.cloud.datafusion.v1.Version.Type
	(Accelerator_AcceleratorType)(0), // 1: google.events.cloud.datafusion.v1.Accelerator.AcceleratorType
	(Accelerator_State)(0),           // 2: google.events.cloud.datafusion.v1.Accelerator.State
	(Instance_Type)(0),               // 3: google.events.cloud.datafusion.v1.Instance.Type
	(Instance_State)(0),              // 4: google.events.cloud.datafusion.v1.Instance.State
	(Instance_DisabledReason)(0),     // 5: google.events.cloud.datafusion.v1.Instance.DisabledReason
	(*NetworkConfig)(nil),            // 6: google.events.cloud.datafusion.v1.NetworkConfig
	(*Version)(nil),                  // 7: google.events.cloud.datafusion.v1.Version
	(*Accelerator)(nil),              // 8: google.events.cloud.datafusion.v1.Accelerator
	(*CryptoKeyConfig)(nil),          // 9: google.events.cloud.datafusion.v1.CryptoKeyConfig
	(*Instance)(nil),                 // 10: google.events.cloud.datafusion.v1.Instance
	(*EventPublishConfig)(nil),       // 11: google.events.cloud.datafusion.v1.EventPublishConfig
	(*DnsPeering)(nil),               // 12: google.events.cloud.datafusion.v1.DnsPeering
	(*InstanceEventData)(nil),        // 13: google.events.cloud.datafusion.v1.InstanceEventData
	(*DnsPeeringEventData)(nil),      // 14: google.events.cloud.datafusion.v1.DnsPeeringEventData
	nil,                              // 15: google.events.cloud.datafusion.v1.Instance.LabelsEntry
	nil,                              // 16: google.events.cloud.datafusion.v1.Instance.OptionsEntry
	(*timestamppb.Timestamp)(nil),    // 17: google.protobuf.Timestamp
}
var file_cloud_datafusion_v1_data_proto_depIdxs = []int32{
	0,  // 0: google.events.cloud.datafusion.v1.Version.type:type_name -> google.events.cloud.datafusion.v1.Version.Type
	1,  // 1: google.events.cloud.datafusion.v1.Accelerator.accelerator_type:type_name -> google.events.cloud.datafusion.v1.Accelerator.AcceleratorType
	2,  // 2: google.events.cloud.datafusion.v1.Accelerator.state:type_name -> google.events.cloud.datafusion.v1.Accelerator.State
	3,  // 3: google.events.cloud.datafusion.v1.Instance.type:type_name -> google.events.cloud.datafusion.v1.Instance.Type
	6,  // 4: google.events.cloud.datafusion.v1.Instance.network_config:type_name -> google.events.cloud.datafusion.v1.NetworkConfig
	15, // 5: google.events.cloud.datafusion.v1.Instance.labels:type_name -> google.events.cloud.datafusion.v1.Instance.LabelsEntry
	16, // 6: google.events.cloud.datafusion.v1.Instance.options:type_name -> google.events.cloud.datafusion.v1.Instance.OptionsEntry
	17, // 7: google.events.cloud.datafusion.v1.Instance.create_time:type_name -> google.protobuf.Timestamp
	17, // 8: google.events.cloud.datafusion.v1.Instance.update_time:type_name -> google.protobuf.Timestamp
	4,  // 9: google.events.cloud.datafusion.v1.Instance.state:type_name -> google.events.cloud.datafusion.v1.Instance.State
	7,  // 10: google.events.cloud.datafusion.v1.Instance.available_version:type_name -> google.events.cloud.datafusion.v1.Version
	8,  // 11: google.events.cloud.datafusion.v1.Instance.accelerators:type_name -> google.events.cloud.datafusion.v1.Accelerator
	9,  // 12: google.events.cloud.datafusion.v1.Instance.crypto_key_config:type_name -> google.events.cloud.datafusion.v1.CryptoKeyConfig
	5,  // 13: google.events.cloud.datafusion.v1.Instance.disabled_reason:type_name -> google.events.cloud.datafusion.v1.Instance.DisabledReason
	11, // 14: google.events.cloud.datafusion.v1.Instance.event_publish_config:type_name -> google.events.cloud.datafusion.v1.EventPublishConfig
	10, // 15: google.events.cloud.datafusion.v1.InstanceEventData.payload:type_name -> google.events.cloud.datafusion.v1.Instance
	12, // 16: google.events.cloud.datafusion.v1.DnsPeeringEventData.payload:type_name -> google.events.cloud.datafusion.v1.DnsPeering
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_cloud_datafusion_v1_data_proto_init() }
func file_cloud_datafusion_v1_data_proto_init() {
	if File_cloud_datafusion_v1_data_proto != nil {
		return
	}
	file_cloud_datafusion_v1_data_proto_msgTypes[7].OneofWrappers = []any{}
	file_cloud_datafusion_v1_data_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cloud_datafusion_v1_data_proto_rawDesc), len(file_cloud_datafusion_v1_data_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cloud_datafusion_v1_data_proto_goTypes,
		DependencyIndexes: file_cloud_datafusion_v1_data_proto_depIdxs,
		EnumInfos:         file_cloud_datafusion_v1_data_proto_enumTypes,
		MessageInfos:      file_cloud_datafusion_v1_data_proto_msgTypes,
	}.Build()
	File_cloud_datafusion_v1_data_proto = out.File
	file_cloud_datafusion_v1_data_proto_goTypes = nil
	file_cloud_datafusion_v1_data_proto_depIdxs = nil
}
